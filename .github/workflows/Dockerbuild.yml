name: Docker Build & Push with Cache
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  # 统一转小写
  IMAGE_NAME: ${{ github.repository }}
  CACHE_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name && github.event.repository.name.toLowerCase() }}:build-cache
  RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 将 Secret 注入环境变量，供后续 if 判断
      - name: Inject Render Hook
        run: |
          echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEPLOY_HOOK }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-

      # 关键：统一转小写
      - name: Normalize image names to lowercase
        id: lower
        run: |
          echo "IMAGE_NAME_LOWER=${IMAGE_NAME,,}" >> $GITHUB_OUTPUT
          echo "CACHE_IMAGE_LOWER=${CACHE_IMAGE,,}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 使用转小写后的缓存镜像
          cache-from: type=registry,ref=${{ steps.lower.outputs.CACHE_IMAGE_LOWER }}
          cache-to:   type=registry,ref=${{ steps.lower.outputs.CACHE_IMAGE_LOWER }},mode=max

      - name: Trigger Render Deploy Hook
        if: env.RENDER_DEPLOY_HOOK != ''
        run: curl -X POST "$RENDER_DEPLOY_HOOK"
